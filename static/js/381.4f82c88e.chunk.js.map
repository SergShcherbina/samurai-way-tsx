{"version":3,"file":"static/js/381.4f82c88e.chunk.js","mappings":"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","sources":["pages/users/ui/pagination/Pagination.tsx","pages/users/ui/UserSearchForm.tsx","pages/users/ui/Users.tsx","pages/users/ui/UsersContainer.tsx","pages/users/ui/ConnectUsers.tsx"],"sourcesContent":["import React, {useState} from 'react';\nimport styled from \"styled-components\";\n\ntype PaginationType = {\n    pageSize: number;\n    totalItemsCount: number;\n    currentPage: number;\n    changeCurrentPage: (pageNumber: number) => void;\n};\n\nexport const Pagination: React.FC<PaginationType> = (\n    {pageSize, totalItemsCount, currentPage, changeCurrentPage}\n) => {\n    const [portionNumber, setPortionNumber] = useState<number>(1)\n    const pagesCount = Math.ceil(totalItemsCount / pageSize);\n\n    let pages = []\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i)\n    }\n\n    const portionSize = 10 //количество отображаемых кнопок пагинации на странице\n    const paginationPortion = Math.ceil(pagesCount / portionSize) //сколько всего порций получится\n    const firstPortionPageNumber = (portionNumber - 1) * portionSize + 1 //первая страница в порции\n    const lastPortionPageNumber = portionNumber * portionSize //последняя\n\n    return (\n        <RootPagination>\n            <ButtonPagination\n                disabled={portionNumber <= 1}\n                onClick={() => setPortionNumber(portionNumber - 1)}\n            > -10 </ButtonPagination>\n\n            {pages\n                .filter((page) => page >= firstPortionPageNumber && page <= lastPortionPageNumber)\n                .map((page) => (\n                    <Item\n                        key={page}\n                        onClick={() => changeCurrentPage(page)}\n                        active={currentPage === page}\n                    > {page} </Item>\n                ))\n            }\n\n            <ButtonPagination\n                disabled={portionNumber >= paginationPortion}\n                onClick={() => setPortionNumber(portionNumber + 1)}\n            > +10 </ButtonPagination>\n        </RootPagination>\n    )\n}\n\nconst RootPagination = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 10px 0;\n  gap: 5px;\n`\nconst ButtonPagination = styled.button`\n  padding: 7px 10px;\n  background-color: var(--main-color);\n  border: 1px solid var(--border-color);\n  border-radius: var(--border-radius);\n  color: var(--block-color);\n  font-weight: 700;\n  cursor: pointer;\n  user-select: none;\n\n  &:not([disabled]):hover {\n    background-color: var(--hover-btn-color);\n  }\n\n  &:disabled {\n    opacity: 0.5;\n  }\n`\nconst Item = styled.span <{ active: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  padding: 4px 8px;\n  cursor: pointer;\n  border-radius: 5px;\n  user-select: none;\n  background-color: ${props => props.active ? 'var(--block-color)' : ''};\n\n  &:hover {\n    outline: 2px solid var(--block-color);\n  }\n\n  &:active {\n    outline: 2px solid var(--hover-btn-color);\n  }\n`\n\n","import React, {FC} from 'react';\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport {Input} from \"../../../component/form-controls/Input\";\nimport styled from \"styled-components\";\n\nexport type UserSearchFormType = {\n    value: string\n}\n\nconst UserSearch: FC<InjectedFormProps<UserSearchFormType>> = (props) => {\n    return (\n        <Root onSelect={props.handleSubmit}>\n            <Field name={'value'}\n                   placeholder={'search for user by name'}\n                   type={'search'}\n                   component={Input}\n            />\n        </Root>\n    );\n};\n\nexport const UserSearchForm =\n    reduxForm<UserSearchFormType>({form: 'userSearch'})(UserSearch);\n\nconst Root = styled.form`\n  padding-bottom: 10px;\n  border-bottom: 2px solid #fff;\n`","import React from \"react\";\nimport Ava from '../../../assets/img/userAva.jpg';\nimport {Spinner} from \"../../../component/spinner/Spinner\";\nimport {NavLink} from \"react-router-dom\";\nimport {Pagination} from \"./pagination/Pagination\";\nimport styled, {keyframes} from \"styled-components\";\nimport {UserSearchForm, UserSearchFormType} from \"./UserSearchForm\";\nimport {UserType} from \"../model/users-types\";\nimport {Button} from \"../../../component/button/button\";\n\ntype UsersType = {\n    users: UserType[];\n    pageSize: number;\n    totalItemsCout: number;\n    currentPage: number;\n    isFetching: boolean;\n    disableBtnFollow: number[];\n    changeCurrentPage: (pageNumber: number) => void;\n    follow: (userId: number) => void;\n    unFollow: (userId: number) => void;\n    searchUser: (valueSearch: string) => void;\n};\n\nexport const Users = (props: UsersType) => {\n\n    const onFollow = (userId: number, follow: boolean) => {\n        follow ? props.unFollow(userId) : props.follow(userId)\n    }\n\n    const disableBtn = (userId: number) => {\n        return props.disableBtnFollow.some(((id: number) => id === userId))\n    }\n\n    const onFollowBtn = (user: UserType) => {\n        return (\n            <Button\n                disabled={disableBtn(user.id)}\n                onClick={() => onFollow(user.id, user.followed)}\n            >\n                {user.followed ? 'Unfollow' : 'Follow'}\n            </Button>\n        )\n    };\n\n    const onSubmit = (valueSearch: UserSearchFormType) => {\n        props.searchUser(valueSearch.value)\n    }\n\n    return (\n        <Root>\n            <UserSearchForm onSubmit={onSubmit}/>\n            {props.isFetching\n                ?\n                <Spinner/>\n                :\n                props.users.map((user: UserType) => (\n                    <User key={user.id} isFollow={user.followed}>\n\n                        <StyleNavLink to={`/profile/${user.id}`}>\n                            <div>\n                                <img src={user.photos.small ? user.photos.small : Ava}\n                                     alt={'user photo'}\n                                />\n                            </div>\n                            <Info>\n                                <div>name: <b>{user.name}</b></div>\n                                <span>status: {user.status ? user.status : 'empty status'}</span>\n                            </Info>\n                        </StyleNavLink>\n\n                        {onFollowBtn(user)}\n                    </User>\n                ))\n            }\n\n            <Pagination\n                currentPage={props.currentPage}\n                changeCurrentPage={props.changeCurrentPage}\n                totalItemsCount={props.totalItemsCout}\n                pageSize={props.pageSize}\n            />\n        </Root>\n    );\n};\n\nconst hello = keyframes`\n  0% {\n    transform: translateY(0);\n  }\n  30% {\n    transform: translateY(2px);\n  }\n  60% {\n    transform: translateY(-2px);\n  }\n  100% {\n    transform: translateY(0);\n  }\n`\nconst Root = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 10px;\n  height: 100%;\n`\nconst User = styled.div <{ isFollow: boolean }>`\n  display: grid;\n  grid-template-columns: auto auto;\n  align-items: center;\n  justify-content: space-between;\n  gap: 30px;\n\n  border-radius: 10px;\n  background-color: var(--block-color);\n  padding: 20px 40px;\n\n  & button {\n    width: 100px;\n    background-color: ${props => props.isFollow ? '#ffab00' : '#2196f3;'};\n  }\n`\nconst StyleNavLink = styled(NavLink)`\n  display: flex;\n  gap: 20px;\n  align-items: center;\n  transition: all 0.1s;\n\n  & div:has(img) {\n    width: 80px;\n    height: 80px;\n  }\n\n  & img {\n    height: 100%;\n    width: 100%;\n    border-radius: 50%;\n    object-fit: cover;\n  }\n\n  &:hover {\n    animation: ${hello} 0.5s ease-in-out;\n  }\n\n  &:active {\n    transform: scale(0.98);\n  }\n`\nconst Info = styled.div`\n  overflow: auto;\n\n  & div {\n    font-size: 1.2rem;\n  }\n\n  & span {\n    color: #939393;\n  }\n`\n\n\n\n","import React from \"react\";\nimport {Users} from \"./Users\";\nimport {mapStateToPropsUsersType} from \"./ConnectUsers\";\n\nexport type UsersContainerType = mapStateToPropsUsersType & {\n    getUsers: (currentPage: number, pageSize: number, valueSearch?: string) => void;\n    follow: (userId: number) => void;\n    unFollow: (userId: number) => void;\n};\n\nexport class UsersContainer extends React.Component<UsersContainerType> {\n    constructor(props: UsersContainerType) {\n        super(props);\n    }\n\n    componentDidMount() {\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\n    }\n\n    changeCurrentPage = (pageNumber: number) => {\n        this.props.getUsers(pageNumber, this.props.pageSize);\n    };\n\n    searchUser = (valueSearch: string) => {\n        this.props.getUsers(this.props.currentPage, this.props.pageSize, valueSearch);\n    }\n\n    render() {\n        return (\n            <Users\n                changeCurrentPage={this.changeCurrentPage}\n                totalItemsCout={this.props.totalItemsCout}\n                pageSize={this.props.pageSize}\n                currentPage={this.props.currentPage}\n                users={this.props.users}\n                isFetching={this.props.isFetching}\n                disableBtnFollow={this.props.disableBtnFollow}\n                follow={this.props.follow}\n                unFollow={this.props.unFollow}\n                searchUser={this.searchUser}\n            />\n        );\n    }\n}\n\n","import {AppStateType} from \"../../../app/model/store\";\nimport {connect} from \"react-redux\";\nimport {UsersContainer} from \"./UsersContainer\";\nimport {follow, getUsersTC, unFollow} from \"../model/users-actions\";\n\nexport type mapStateToPropsUsersType = ReturnType<typeof mapStateToProps>\n\nconst mapStateToProps = (state: AppStateType) => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalItemsCout: state.usersPage.totalItemsCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching,\n        disableBtnFollow: state.usersPage.disableBtnFollow,\n    };\n};\n\n//передали вторым параметром вместо mapDispatchToProps обьект с AC или thunk\nexport const ConnectUsers = connect(mapStateToProps, {\n    //здесь получаем callback thunk\n    getUsers: getUsersTC,\n    follow,\n    unFollow,\n})(UsersContainer);\n"],"names":["Pagination","pageSize","totalItemsCount","currentPage","changeCurrentPage","useState","portionNumber","setPortionNumber","pagesCount","Math","ceil","pages","i","push","paginationPortion","firstPortionPageNumber","lastPortionPageNumber","RootPagination","ButtonPagination","disabled","onClick","filter","page","map","Item","active","styled","props","UserSearchForm","reduxForm","form","Root","onSelect","handleSubmit","Field","name","placeholder","type","component","Input","Users","onFollowBtn","user","userId","id","disableBtnFollow","some","follow","unFollow","onFollow","followed","onSubmit","valueSearch","searchUser","value","isFetching","Spinner","users","User","isFollow","StyleNavLink","to","src","photos","small","Ava","alt","Info","status","totalItemsCout","hello","keyframes","NavLink","UsersContainer","pageNumber","getUsers","this","React","ConnectUsers","connect","state","usersPage","getUsersTC"],"sourceRoot":""}